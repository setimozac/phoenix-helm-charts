apiVersion: apps/v1
kind: Deployment
metadata:
  name: phoenix-envmanager
  namespace: {{ .Release.namespace }}
  labels:
    operator-controller: phoenix-envmanager
    app.kubernetes.io/name: phoenix
spec:
  {{- if not .Values.phoenix.autoscaling.enabled }}
  replicas: {{ .Values.phoenix.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      operator-controller: phoenix-envmanager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        operator-controller: phoenix-envmanager
    spec:
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ .Values.phoenix.serviceAccount.name }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: {{ .Values.phoenix.containerName }}
          image: "{{ .Values.phoenix.image.repository }}:{{ .Values.phoenix.image.tag }}"
          imagePullPolicy: {{ .Values.phoenix.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - "ALL"
          # livenessProbe:
          #   httpGet:
          #     path: /health_check
          #     port: 8081
          #   initialDelaySeconds: 50
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /readyz
          #     port: 8081
          #   initialDelaySeconds: 50
          #   periodSeconds: 20
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi

